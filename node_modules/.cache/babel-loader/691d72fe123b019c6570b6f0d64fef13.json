{"ast":null,"code":"/**\n * React Router DOM v6.4.0-pre.8\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { useRenderDataRouter, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_DataRouterContext, UNSAFE_RouteContext } from 'react-router';\nexport { DataMemoryRouter, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createPath, createRoutesFromChildren, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useRenderDataRouter, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createBrowserRouter, createHashRouter, createBrowserHistory, createHashHistory, matchPath, invariant } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach(value => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>\n\n    if (target.name) {\n      formData.set(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method,\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"resetScroll\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\"];\n\nfunction DataBrowserRouter(_ref) {\n  let {\n    children,\n    fallbackElement,\n    hydrationData,\n    routes,\n    window\n  } = _ref;\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: routes => createBrowserRouter({\n      routes,\n      hydrationData,\n      window\n    })\n  });\n}\n\nfunction DataHashRouter(_ref2) {\n  let {\n    children,\n    hydrationData,\n    fallbackElement,\n    routes,\n    window\n  } = _ref2;\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: routes => createHashRouter({\n      routes,\n      hydrationData,\n      window\n    })\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref3) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref4) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref5) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref5;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref6, ref) {\n  let {\n    onClick,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    resetScroll\n  } = _ref6,\n      rest = _objectWithoutPropertiesLoose(_ref6, _excluded);\n\n  let href = useHref(to);\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    resetScroll\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented && !reloadDocument) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref7, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded2);\n\n  let path = useResolvedPath(to);\n  let match = useMatch({\n    path: path.pathname,\n    end,\n    caseSensitive\n  });\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  let nextPath = useResolvedPath(nextLocation || \"\");\n  let nextMatch = React.useMemo(() => nextLocation ? matchPath({\n    path: path.pathname,\n    end,\n    caseSensitive\n  }, nextPath.pathname) : null, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  let isPending = nextMatch != null;\n  let isActive = match != null;\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref8, forwardedRef) => {\n  let {\n    replace,\n    method = defaultMethod,\n    action = \".\",\n    onSubmit,\n    fetcherKey,\n    routeId\n  } = _ref8,\n      props = _objectWithoutPropertiesLoose(_ref8, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action);\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method,\n      replace\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref9) {\n  let {\n    getKey,\n    storageKey\n  } = _ref9;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    resetScroll\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explcitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        resetScroll\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, resetScroll]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = React.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    !(router != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useSubmit() must be used within a <DataRouter>\") : invariant(false) : void 0;\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action) {\n  if (action === void 0) {\n    action = \".\";\n  }\n\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  let {\n    pathname,\n    search\n  } = useResolvedPath(action);\n\n  if (action === \".\" && match.route.index) {\n    search = search ? search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return pathname + search;\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used within a DataRouter\") : invariant(false) : void 0;\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetchers must be used within a DataRouter\") : invariant(false) : void 0;\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a DataRouter, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp2) {\n  let {\n    getKey,\n    storageKey\n  } = _temp2 === void 0 ? {} : _temp2;\n  let location = useLocation();\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !(router != null && state != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouter\") : invariant(false) : void 0;\n  let {\n    restoreScrollPosition,\n    resetScrollPosition\n  } = state; // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(() => {\n    if ((state == null ? void 0 : state.navigation.state) === \"idle\") {\n      let key = (getKey ? getKey(state.location, state.matches) : null) || state.location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, state.navigation.state, state.location, state.matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (resetScrollPosition === false) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, resetScrollPosition]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\n\nexport { BrowserRouter, DataBrowserRouter, DataHashRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAMA,aAAa,GAAG,KAAtB;AACP,MAAMC,cAAc,GAAG,mCAAvB;;AAEM,SAAUC,aAAV,CAAwBC,MAAxB,EAAmC;EACvC,OAAOA,MAAM,IAAI,IAAVA,IAAkB,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAAnD;AACD;;AAEK,SAAUC,eAAV,CAA0BF,MAA1B,EAAqC;EACzC,OAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,QAAjE;AACD;;AAEK,SAAUI,aAAV,CAAwBJ,MAAxB,EAAmC;EACvC,OAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,MAAjE;AACD;;AAEK,SAAUK,cAAV,CAAyBL,MAAzB,EAAoC;EACxC,OAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,OAAjE;AACD;;AAOD,SAASM,eAAT,CAAyBC,KAAzB,EAAiD;EAC/C,OAAO,CAAC,EAAEA,KAAK,CAACC,OAAND,IAAiBA,KAAK,CAACE,MAAvBF,IAAiCA,KAAK,CAACG,OAAvCH,IAAkDA,KAAK,CAACI,QAA1D,CAAR;AACD;;AAEe,gCACdJ,KADc,EAEdK,MAFc,EAEC;EAEf,OACEL,KAAK,CAACM,MAANN,KAAiB,CAAjBA;EACC,CAACK,MAAD,IAAWA,MAAM,KAAK,OADvBL,KACmC;EACnC,CAACD,eAAe,CAACC,KAAD,CAHlB;EAAA;AAKD;AAUD;;;;;;;;;;;;;;;;;;;;AAoBG;;;AACa,4BACdO,IADc,EACgB;EAAA,IAA9BA,IAA8B;IAA9BA,IAA8B,GAAF,EAA5BA;EAA8B;;EAE9B,OAAO,IAAIC,eAAJ,CACL,OAAOD,IAAP,KAAgB,QAAhB,IACAE,KAAK,CAACC,OAAND,CAAcF,IAAdE,CADA,IAEAF,IAAI,YAAYC,eAFhB,GAGID,IAHJ,GAIII,MAAM,CAACC,IAAPD,CAAYJ,IAAZI,EAAkBE,MAAlBF,CAAyB,CAACG,IAAD,EAAOC,GAAP,KAAc;IACrC,IAAIC,KAAK,GAAGT,IAAI,CAACQ,GAAD,CAAhB;IACA,OAAOD,IAAI,CAACG,MAALH,CACLL,KAAK,CAACC,OAAND,CAAcO,KAAdP,IAAuBO,KAAK,CAACE,GAANF,CAAWG,CAAD,IAAO,CAACJ,GAAD,EAAMI,CAAN,CAAjBH,CAAvBP,GAAoD,CAAC,CAACM,GAAD,EAAMC,KAAN,CAAD,CAD/CF,CAAP;EAFF,GAKG,EALHH,CALC,CAAP;AAYD;;AAEe,oCACdS,cADc,EAEdC,mBAFc,EAEsB;EAEpC,IAAIC,YAAY,GAAGC,kBAAkB,CAACH,cAAD,CAArC;;EAEA,KAAK,IAAIL,GAAT,IAAgBM,mBAAmB,CAACT,IAApBS,EAAhB,EAA4C;IAC1C,IAAI,CAACC,YAAY,CAACE,GAAbF,CAAiBP,GAAjBO,CAAL,EAA4B;MAC1BD,mBAAmB,CAACI,MAApBJ,CAA2BN,GAA3BM,EAAgCK,OAAhCL,CAAyCL,KAAD,IAAU;QAChDM,YAAY,CAACK,MAAbL,CAAoBP,GAApBO,EAAyBN,KAAzBM;MADF;IAGD;EACF;;EAED,OAAOA,YAAP;AACD;;SAgCeM,sBACdvB,QAQAwB,eACAC,SAAsB;EAOtB,IAAIC,MAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,QAAJ;;EAEA,IAAIrC,aAAa,CAACQ,MAAD,CAAjB,EAA2B;IACzB,IAAI8B,iBAAiB,GACnBL,OACD,CAACK,iBAFF;IAIAJ,MAAM,GAAGD,OAAO,CAACC,MAARD,IAAkBzB,MAAM,CAAC+B,YAAP/B,CAAoB,QAApBA,CAAlByB,IAAmDxC,aAA5DyC;IACAC,MAAM,GAAGF,OAAO,CAACE,MAARF,IAAkBzB,MAAM,CAAC+B,YAAP/B,CAAoB,QAApBA,CAAlByB,IAAmDD,aAA5DG;IACAC,OAAO,GACLH,OAAO,CAACG,OAARH,IAAmBzB,MAAM,CAAC+B,YAAP/B,CAAoB,SAApBA,CAAnByB,IAAqDvC,cADvD0C;IAGAC,QAAQ,GAAG,IAAIG,QAAJ,CAAahC,MAAb,CAAX6B;;IAEA,IAAIC,iBAAiB,IAAIA,iBAAiB,CAACG,IAA3C,EAAiD;MAC/CJ,QAAQ,CAACP,MAATO,CAAgBC,iBAAiB,CAACG,IAAlCJ,EAAwCC,iBAAiB,CAACnB,KAA1DkB;IACD;EAdH,OAeO,IACLvC,eAAe,CAACU,MAAD,CAAfV,IACCG,cAAc,CAACO,MAAD,CAAdP,KACEO,MAAM,CAACkC,IAAPlC,KAAgB,QAAhBA,IAA4BA,MAAM,CAACkC,IAAPlC,KAAgB,OAD9CP,CAFI,EAIL;IACA,IAAI0C,IAAI,GAAGnC,MAAM,CAACmC,IAAlB;;IAEA,IAAIA,IAAI,IAAI,IAAZ,EAAkB;MAChB,MAAM,IAAIC,KAAJ,CAAN,sEAAM,CAAN;IAJF;;;IAWAV,MAAM,GACJD,OAAO,CAACC,MAARD,IACAzB,MAAM,CAAC+B,YAAP/B,CAAoB,YAApBA,CADAyB,IAEAU,IAAI,CAACJ,YAALI,CAAkB,QAAlBA,CAFAV,IAGAxC,aAJFyC;IAKAC,MAAM,GACJF,OAAO,CAACE,MAARF,IACAzB,MAAM,CAAC+B,YAAP/B,CAAoB,YAApBA,CADAyB,IAEAU,IAAI,CAACJ,YAALI,CAAkB,QAAlBA,CAFAV,IAGAD,aAJFG;IAKAC,OAAO,GACLH,OAAO,CAACG,OAARH,IACAzB,MAAM,CAAC+B,YAAP/B,CAAoB,aAApBA,CADAyB,IAEAU,IAAI,CAACJ,YAALI,CAAkB,SAAlBA,CAFAV,IAGAvC,cAJF0C;IAMAC,QAAQ,GAAG,IAAIG,QAAJ,CAAaG,IAAb,CAAXN,CA3BA;;IA8BA,IAAI7B,MAAM,CAACiC,IAAX,EAAiB;MACfJ,QAAQ,CAACQ,GAATR,CAAa7B,MAAM,CAACiC,IAApBJ,EAA0B7B,MAAM,CAACW,KAAjCkB;IACD;EApCI,OAqCA,IAAI1C,aAAa,CAACa,MAAD,CAAjB,EAA2B;IAChC,MAAM,IAAIoC,KAAJ,CACJ,2FADI,CAAN;EADK,OAKA;IACLV,MAAM,GAAGD,OAAO,CAACC,MAARD,IAAkBxC,aAA3ByC;IACAC,MAAM,GAAGF,OAAO,CAACE,MAARF,IAAkBD,aAA3BG;IACAC,OAAO,GAAGH,OAAO,CAACG,OAARH,IAAmBvC,cAA7B0C;;IAEA,IAAI5B,MAAM,YAAYgC,QAAtB,EAAgC;MAC9BH,QAAQ,GAAG7B,MAAX6B;IADF,OAEO;MACLA,QAAQ,GAAG,IAAIG,QAAJ,EAAXH;;MAEA,IAAI7B,MAAM,YAAYG,eAAtB,EAAuC;QACrC,KAAK,IAAI,CAAC8B,IAAD,EAAOtB,KAAP,CAAT,IAA0BX,MAA1B,EAAkC;UAChC6B,QAAQ,CAACP,MAATO,CAAgBI,IAAhBJ,EAAsBlB,KAAtBkB;QACD;MAHH,OAIO,IAAI7B,MAAM,IAAI,IAAd,EAAoB;QACzB,KAAK,IAAIiC,IAAT,IAAiB3B,MAAM,CAACC,IAAPD,CAAYN,MAAZM,CAAjB,EAAsC;UACpCuB,QAAQ,CAACP,MAATO,CAAgBI,IAAhBJ,EAAsB7B,MAAM,CAACiC,IAAD,CAA5BJ;QACD;MACF;IACF;EACF;;EAED,IAAI;IAAES,QAAF;IAAYC;EAAZ,IAAqBC,MAAM,CAACC,QAAhC;EACA,IAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQhB,MAAR,EAAmBW,QAAnB,GAAgCC,IAAbD,GAAaC,IAAhC,CAAV;EAEA,OAAO;IAAEG,GAAF;IAAOhB,MAAP;IAAeE,OAAf;IAAwBC;EAAxB,CAAP;AACD;;;;;;AClEe,2BAMSe,IANT,EAMS;EAAA,IANS;IAChCC,QADgC;IAEhCC,eAFgC;IAGhCC,aAHgC;IAIhCC,MAJgC;IAKhCR;EALgC,IAMTI;EACvB,OAAOK,mBAAmB,CAAC;IACzBJ,QADyB;IAEzBC,eAFyB;IAGzBE,MAHyB;IAIzBE,YAAY,EAAGF,MAAD,IACZG,mBAAmB,CAAC;MAClBH,MADkB;MAElBD,aAFkB;MAGlBP;IAHkB,CAAD;EALI,CAAD,CAA1B;AAWD;;AAUe,wBAMSY,KANT,EAMS;EAAA,IANM;IAC7BP,QAD6B;IAE7BE,aAF6B;IAG7BD,eAH6B;IAI7BE,MAJ6B;IAK7BR;EAL6B,IAMNY;EACvB,OAAOH,mBAAmB,CAAC;IACzBJ,QADyB;IAEzBC,eAFyB;IAGzBE,MAHyB;IAIzBE,YAAY,EAAGF,MAAD,IACZK,gBAAgB,CAAC;MACfL,MADe;MAEfD,aAFe;MAGfP;IAHe,CAAD;EALO,CAAD,CAA1B;AAWD;AAQD;;AAEG;;;AACG,SAAUc,aAAV,CAIeC,KAJf,EAIe;EAAA,IAJS;IAC5BC,QAD4B;IAE5BX,QAF4B;IAG5BL;EAH4B,IAITe;EACnB,IAAIE,UAAU,GAAGC,KAAK,CAACC,MAAND,EAAjB;;EACA,IAAID,UAAU,CAACG,OAAXH,IAAsB,IAA1B,EAAgC;IAC9BA,UAAU,CAACG,OAAXH,GAAqBI,oBAAoB,CAAC;MAAErB,MAAF;MAAUsB,QAAQ,EAAE;IAApB,CAAD,CAAzCL;EACD;;EAED,IAAIM,OAAO,GAAGN,UAAU,CAACG,OAAzB;EACA,IAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAANR,CAAe;IACrC/B,MAAM,EAAEoC,OAAO,CAACpC,MADqB;IAErCc,QAAQ,EAAEsB,OAAO,CAACtB;EAFmB,CAAfiB,CAAxB;EAKAA,KAAK,CAACS,eAANT,CAAsB,MAAMK,OAAO,CAACK,MAARL,CAAeE,QAAfF,CAA5BL,EAAsD,CAACK,OAAD,CAAtDL;EAEA,oBACEA,oBAACW,MAADX,EAAO;IACLF,QAAQ,EAAEA,QADL;IAELX,QAAQ,EAAEA,QAFL;IAGLJ,QAAQ,EAAEuB,KAAK,CAACvB,QAHX;IAIL6B,cAAc,EAAEN,KAAK,CAACrC,MAJjB;IAKL4C,SAAS,EAAER;EALN,CAAPL,CADF;AASD;AAQD;;;AAGG;;;AACG,SAAUc,UAAV,CAAoEC,KAApE,EAAoE;EAAA,IAA/C;IAAEjB,QAAF;IAAYX,QAAZ;IAAsBL;EAAtB,IAA+CiC;EACxE,IAAIhB,UAAU,GAAGC,KAAK,CAACC,MAAND,EAAjB;;EACA,IAAID,UAAU,CAACG,OAAXH,IAAsB,IAA1B,EAAgC;IAC9BA,UAAU,CAACG,OAAXH,GAAqBiB,iBAAiB,CAAC;MAAElC,MAAF;MAAUsB,QAAQ,EAAE;IAApB,CAAD,CAAtCL;EACD;;EAED,IAAIM,OAAO,GAAGN,UAAU,CAACG,OAAzB;EACA,IAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAANR,CAAe;IACrC/B,MAAM,EAAEoC,OAAO,CAACpC,MADqB;IAErCc,QAAQ,EAAEsB,OAAO,CAACtB;EAFmB,CAAfiB,CAAxB;EAKAA,KAAK,CAACS,eAANT,CAAsB,MAAMK,OAAO,CAACK,MAARL,CAAeE,QAAfF,CAA5BL,EAAsD,CAACK,OAAD,CAAtDL;EAEA,oBACEA,oBAACW,MAADX,EAAO;IACLF,QAAQ,EAAEA,QADL;IAELX,QAAQ,EAAEA,QAFL;IAGLJ,QAAQ,EAAEuB,KAAK,CAACvB,QAHX;IAIL6B,cAAc,EAAEN,KAAK,CAACrC,MAJjB;IAKL4C,SAAS,EAAER;EALN,CAAPL,CADF;AASD;AAQD;;;;;AAKG;;;AACH,SAASiB,aAAT,CAA0EC,KAA1E,EAA0E;EAAA,IAAnD;IAAEpB,QAAF;IAAYX,QAAZ;IAAsBkB;EAAtB,IAAmDa;EACxE,MAAM,CAACZ,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAANR,CAAe;IACvC/B,MAAM,EAAEoC,OAAO,CAACpC,MADuB;IAEvCc,QAAQ,EAAEsB,OAAO,CAACtB;EAFqB,CAAfiB,CAA1B;EAKAA,KAAK,CAACS,eAANT,CAAsB,MAAMK,OAAO,CAACK,MAARL,CAAeE,QAAfF,CAA5BL,EAAsD,CAACK,OAAD,CAAtDL;EAEA,oBACEA,oBAACW,MAADX,EAAO;IACLF,QAAQ,EAAEA,QADL;IAELX,QAAQ,EAAEA,QAFL;IAGLJ,QAAQ,EAAEuB,KAAK,CAACvB,QAHX;IAIL6B,cAAc,EAAEN,KAAK,CAACrC,MAJjB;IAKL4C,SAAS,EAAER;EALN,CAAPL,CADF;AASD;;AAED,IAAamB,qCAAb,EAAa;EACXF,aAAa,CAACG,WAAdH,GAA4B,wBAA5BA;AACD;AAaD;;AAEG;;;AACI,MAAMI,IAAI,gBAAGrB,KAAK,CAACsB,UAANtB,CAClB,SAASuB,WAAT,CAWEC,KAXF,EAWEA,GAXF,EAWK;EAAA,IAVH;IACEC,OADF;IAEEC,cAFF;IAGEC,OAHF;IAIErB,KAJF;IAKEhE,MALF;IAMEsF,EANF;IAOEC;EAPF,IAUGC;EAAA,IAFEC,IAEF;;EAEH,IAAIC,IAAI,GAAGC,OAAO,CAACL,EAAD,CAAlB;EACA,IAAIM,eAAe,GAAGC,mBAAmB,CAACP,EAAD,EAAK;IAC5CD,OAD4C;IAE5CrB,KAF4C;IAG5ChE,MAH4C;IAI5CuF;EAJ4C,CAAL,CAAzC;;EAMA,SAASO,WAAT,CACEnG,KADF,EACwD;IAEtD,IAAIwF,OAAJ,EAAaA,OAAO,CAACxF,KAAD,CAAPwF;;IACb,IAAI,CAACxF,KAAK,CAACoG,gBAAP,IAA2B,CAACX,cAAhC,EAAgD;MAC9CQ,eAAe,CAACjG,KAAD,CAAfiG;IACD;EACF;;EAED;IAAA;IACE;IACAlC,sCACM+B,IADN;MAEEC,IAAI,EAAEA,IAFR;MAGEP,OAAO,EAAEW,WAHX;MAIEZ,GAAG,EAAEA,GAJP;MAKElF,MAAM,EAAEA;IALV;EAFF;AA9BgB,EAAb;;AA2CP,IAAa6E,qCAAb,EAAa;EACXE,IAAI,CAACD,WAALC,GAAmB,MAAnBA;AACD;AAuBD;;AAEG;;;AACI,MAAMiB,OAAO,gBAAGtC,KAAK,CAACsB,UAANtB,CACrB,SAASuC,cAAT,CAWEf,KAXF,EAWEA,GAXF,EAWK;EAAA,IAVH;IACE,gBAAgBgB,eAAe,GAAG,MADpC;IAEEC,aAAa,GAAG,KAFlB;IAGEC,SAAS,EAAEC,aAAa,GAAG,EAH7B;IAIEC,GAAG,GAAG,KAJR;IAKEC,KAAK,EAAEC,SALT;IAMElB,EANF;IAOEzC;EAPF,IAUG4D;EAAA,IAFEhB,IAEF;;EAEH,IAAIiB,IAAI,GAAGC,eAAe,CAACrB,EAAD,CAA1B;EACA,IAAIsB,KAAK,GAAGC,QAAQ,CAAC;IAAEH,IAAI,EAAEA,IAAI,CAACI,QAAb;IAAuBR,GAAvB;IAA4BH;EAA5B,CAAD,CAApB;EAEA,IAAIY,WAAW,GAAGrD,KAAK,CAACsD,UAANtD,CAAiBuD,6BAAjBvD,CAAlB;EACA,IAAIwD,YAAY,GAAGH,WAAH,QAAGA,GAAH,MAAGA,cAAW,CAAEI,UAAbJ,CAAwBtE,QAA3C;EACA,IAAI2E,QAAQ,GAAGT,eAAe,CAACO,YAAY,IAAI,EAAjB,CAA9B;EACA,IAAIG,SAAS,GAAG3D,KAAK,CAAC4D,OAAN5D,CACd,MACEwD,YAAY,GACRK,SAAS,CACP;IAAEb,IAAI,EAAEA,IAAI,CAACI,QAAb;IAAuBR,GAAvB;IAA4BH;EAA5B,CADO,EAEPiB,QAAQ,CAACN,QAFF,CADD,GAKR,IAPQpD,EAQd,CAACwD,YAAD,EAAeR,IAAI,CAACI,QAApB,EAA8BX,aAA9B,EAA6CG,GAA7C,EAAkDc,QAAQ,CAACN,QAA3D,CARcpD,CAAhB;EAWA,IAAI8D,SAAS,GAAGH,SAAS,IAAI,IAA7B;EACA,IAAII,QAAQ,GAAGb,KAAK,IAAI,IAAxB;EAEA,IAAIc,WAAW,GAAGD,QAAQ,GAAGvB,eAAH,GAAqByB,SAA/C;EAEA,IAAIvB,SAAJ;;EACA,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyC;IACvCD,SAAS,GAAGC,aAAa,CAAC;MAAEoB,QAAF;MAAYD;IAAZ,CAAD,CAAzBpB;EADF,OAEO;IACL;IACA;IACA;IACA;IACA;IACAA,SAAS,GAAG,CACVC,aADU,EAEVoB,QAAQ,GAAG,QAAH,GAAc,IAFZ,EAGVD,SAAS,GAAG,SAAH,GAAe,IAHd,EAKTI,MALS,CAKFC,OALE,EAMTC,IANS,CAMJ,GANI,CAAZ1B;EAOD;;EAED,IAAIG,KAAK,GACP,OAAOC,SAAP,KAAqB,UAArB,GACIA,SAAS,CAAC;IAAEiB,QAAF;IAAYD;EAAZ,CAAD,CADb,GAEIhB,SAHN;EAKA,oBACE9C,KAAC,cAADA,CAACqB,IAADrB,eACM+B,IADN;IAEgB,2BAFhB;IAGEW,SAAS,EAAEA,SAHb;IAIElB,GAAG,EAAEA,GAJP;IAKEqB,KAAK,EAAEA,KALT;IAMEjB,EAAE,EAAEA;EANN,IAQG,OAAOzC,QAAP,KAAoB,UAApB,GACGA,QAAQ,CAAC;IAAE4E,QAAF;IAAYD;EAAZ,CAAD,CADX,GAEG3E,QAVNa,CADF;AA3DmB,EAAhB;;AA4EP,IAAamB,qCAAb,EAAa;EACXmB,OAAO,CAAClB,WAARkB,GAAsB,SAAtBA;AACD;AA4BD;;;;;AAKG;;;AACI,MAAM+B,IAAI,gBAAGrE,KAAK,CAACsB,UAANtB,CAClB,CAACsE,KAAD,EAAQ9C,GAAR,KAAe;EACb,oBAAOxB,oBAACuE,QAADvE,eAAcsE,KAAd;IAAqB9C,GAAG,EAAEA;EAA1B,GAAP;AAFgB,EAAb;;AAMP,IAAaL,qCAAb,EAAa;EACXkD,IAAI,CAACjD,WAALiD,GAAmB,MAAnBA;AACD;;AAeD,MAAME,QAAQ,gBAAGvE,KAAK,CAACsB,UAANtB,CACf,QAUEwE,YAVF,KAWI;EAAA,IAVF;IACE7C,OADF;IAEE3D,MAAM,GAAGzC,aAFX;IAGE0C,MAAM,GAAG,GAHX;IAIEwG,QAJF;IAKEC,UALF;IAMEC;EANF,IAUEC;EAAA,IAHGN,KAGH;;EACF,IAAIO,MAAM,GAAGC,aAAa,CAACJ,UAAD,EAAaC,OAAb,CAA1B;EACA,IAAII,UAAU,GACZ/G,MAAM,CAACnC,WAAPmC,OAAyB,KAAzBA,GAAiC,KAAjCA,GAAyC,MAD3C;EAEA,IAAIgH,UAAU,GAAGC,aAAa,CAAChH,MAAD,CAA9B;;EACA,IAAIiH,aAAa,GAA6CjJ,KAAD,IAAU;IACrEwI,QAAQ,IAAIA,QAAQ,CAACxI,KAAD,CAApBwI;IACA,IAAIxI,KAAK,CAACoG,gBAAV,EAA4B;IAC5BpG,KAAK,CAACkJ,cAANlJ;IAEA,IAAImJ,SAAS,GAAInJ,KAAoC,CAACoJ,WAArCpJ,CACdmJ,SADH;IAGAP,MAAM,CAACO,SAAS,IAAInJ,KAAK,CAACqJ,aAApB,EAAmC;MAAEtH,MAAF;MAAU2D;IAAV,CAAnC,CAANkD;EARF;;EAWA,oBACE7E;IACEwB,GAAG,EAAEgD,YADP;IAEExG,MAAM,EAAE+G,UAFV;IAGE9G,MAAM,EAAE+G,UAHV;IAIEP,QAAQ,EAAES;EAJZ,GAKMZ,KALN,EADF;AA5Ba,EAAjB;;AAwCA,IAAanD,qCAAb,EAAa;EACXkD,IAAI,CAACjD,WAALiD,GAAmB,MAAnBA;AACD;AAOD;;;AAGG;;;SACakB,kBAGSC;EAAA,IAHS;IAChCC,MADgC;IAEhCC;EAFgC,IAGTF;EACvBG,oBAAoB,CAAC;IAAEF,MAAF;IAAUC;EAAV,CAAD,CAApBC;EACA,OAAO,IAAP;AACD;;AAED,IAAaxE,qCAAb,EAAa;EACXoE,iBAAiB,CAACnE,WAAlBmE,GAAgC,mBAAhCA;AACD,C,CAAA;AAGD;AACA;AACA;;AAEA;;;;AAIG;;;SACapD,oBACdP,IAWMgE;EAAA,IAVN;IACEtJ,MADF;IAEEqF,OAAO,EAAEkE,WAFX;IAGEvF,KAHF;IAIEuB;EAJF,IAUM+D,mBAAF,EAAE;EAEN,IAAIE,QAAQ,GAAGC,WAAW,EAA1B;EACA,IAAIhH,QAAQ,GAAGiH,WAAW,EAA1B;EACA,IAAIhD,IAAI,GAAGC,eAAe,CAACrB,EAAD,CAA1B;EAEA,OAAO5B,KAAK,CAACiG,WAANjG,CACJ/D,KAAD,IAA2C;IACzC,IAAIiK,sBAAsB,CAACjK,KAAD,EAAQK,MAAR,CAA1B,EAA2C;MACzCL,KAAK,CAACkJ,cAANlJ,GADyC;MAIzC;;MACA,IAAI0F,OAAO,GACTkE,WAAW,KAAK5B,SAAhB4B,GACIA,WADJA,GAEIM,UAAU,CAACpH,QAAD,CAAVoH,KAAyBA,UAAU,CAACnD,IAAD,CAHzC;MAKA8C,QAAQ,CAAClE,EAAD,EAAK;QAAED,OAAF;QAAWrB,KAAX;QAAkBuB;MAAlB,CAAL,CAARiE;IACD;EAbE,GAeL,CAAC/G,QAAD,EAAW+G,QAAX,EAAqB9C,IAArB,EAA2B6C,WAA3B,EAAwCvF,KAAxC,EAA+ChE,MAA/C,EAAuDsF,EAAvD,EAA2DC,WAA3D,CAfK7B,CAAP;AAiBD;AAED;;;AAGG;;;AACG,SAAUoG,eAAV,CACJC,WADI,EAC6B;EAEjClF,+CAAO,CACL,OAAO1E,eAAP,KAA2B,WADtB,EAEL,meAFK,CAAP;EAYA,IAAI6J,sBAAsB,GAAGtG,KAAK,CAACC,MAAND,CAAaxC,kBAAkB,CAAC6I,WAAD,CAA/BrG,CAA7B;EAEA,IAAIjB,QAAQ,GAAGiH,WAAW,EAA1B;EACA,IAAIzI,YAAY,GAAGyC,KAAK,CAAC4D,OAAN5D,CACjB,MACEuG,0BAA0B,CACxBxH,QAAQ,CAACyH,MADe,EAExBF,sBAAsB,CAACpG,OAFC,CAFXF,EAMjB,CAACjB,QAAQ,CAACyH,MAAV,CANiBxG,CAAnB;EASA,IAAI8F,QAAQ,GAAGC,WAAW,EAA1B;EACA,IAAIU,eAAe,GAAGzG,KAAK,CAACiG,WAANjG,CACpB,CAAC0G,QAAD,EAAWC,eAAX,KAA8B;IAC5B,MAAMC,eAAe,GAAGpJ,kBAAkB,CACxC,OAAOkJ,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACnJ,YAAD,CAAzC,GAA0DmJ,QADlB,CAA1C;IAGAZ,QAAQ,CAAC,MAAMc,eAAP,EAAwBD,eAAxB,CAARb;EALkB,GAOpB,CAACA,QAAD,EAAWvI,YAAX,CAPoByC,CAAtB;EAUA,OAAO,CAACzC,YAAD,EAAekJ,eAAf,CAAP;AACD;AAuCD;;;AAGG;;;SACaI,YAAS;EACvB,OAAO/B,aAAa,EAApB;AACD;;AAED,SAASA,aAAT,CAAuBJ,UAAvB,EAA4CC,OAA5C,EAA4D;EAC1D,IAAImC,MAAM,GAAG9G,KAAK,CAACsD,UAANtD,CAAiB+G,wBAAjB/G,CAAb;EACA,IAAIlC,aAAa,GAAGmH,aAAa,EAAjC;EAEA,OAAOjF,KAAK,CAACiG,WAANjG,CACL,UAAC1D,MAAD,EAASyB,OAAT,EAAyB;IAAA,IAAhBA,OAAgB;MAAhBA,OAAgB,GAAN,EAAVA;IAAgB;;IACvB,EACE+I,MAAM,IAAI,IADZ,qDAAS,QAEP,gDAFO,CAATE,YAAS,CAAT,KAAS,CAAT;;IAKA,IAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;MACnC,MAAM,IAAIvI,KAAJ,CACJ,sDACE,8DAFE,CAAN;IAID;;IAED,IAAI;MAAEV,MAAF;MAAUE,OAAV;MAAmBC,QAAnB;MAA6Ba;IAA7B,IAAqCnB,qBAAqB,CAC5DvB,MAD4D,EAE5DwB,aAF4D,EAG5DC,OAH4D,CAA9D;IAMA,IAAIiE,IAAI,GAAGhD,GAAG,CAACoE,QAAJpE,GAAeA,GAAG,CAACwH,MAA9B;IACA,IAAIU,IAAI,GAAG;MACTvF,OAAO,EAAE5D,OAAO,CAAC4D,OADR;MAETxD,QAFS;MAGT4G,UAAU,EAAE/G,MAHH;MAITmJ,WAAW,EAAEjJ;IAJJ,CAAX;;IAMA,IAAIwG,UAAJ,EAAgB;MACd,EAAUC,OAAO,IAAI,IAArB,qDAAS,QAAkB,uCAAlB,CAATqC,YAAS,CAAT,KAAS,CAAT;MACAF,MAAM,CAACM,KAAPN,CAAapC,UAAboC,EAAyBnC,OAAzBmC,EAAkC9E,IAAlC8E,EAAwCI,IAAxCJ;IAFF,OAGO;MACLA,MAAM,CAAChB,QAAPgB,CAAgB9E,IAAhB8E,EAAsBI,IAAtBJ;IACD;EAhCE,GAkCL,CAAChJ,aAAD,EAAgBgJ,MAAhB,EAAwBpC,UAAxB,EAAoCC,OAApC,CAlCK3E,CAAP;AAoCD;;AAEe,uBAAc/B,MAAd,EAA0B;EAAA,IAAZA,MAAY;IAAZA,MAAY,GAAH,GAATA;EAAY;;EACxC,IAAIoJ,YAAY,GAAGrH,KAAK,CAACsD,UAANtD,CAAiBsH,mBAAjBtH,CAAnB;EACA,CAAUqH,YAAV,oDAAS,QAAe,kDAAf,CAAT,YAAS,CAAT,KAAS,CAAT;EAEA,IAAI,CAACnE,KAAD,IAAUmE,YAAY,CAACE,OAAbF,CAAqBG,KAArBH,CAA2B,CAAC,CAA5BA,CAAd;EACA,IAAI;IAAEjE,QAAF;IAAYoD;EAAZ,IAAuBvD,eAAe,CAAChF,MAAD,CAA1C;;EAEA,IAAIA,MAAM,KAAK,GAAXA,IAAkBiF,KAAK,CAACuE,KAANvE,CAAYwE,KAAlC,EAAyC;IACvClB,MAAM,GAAGA,MAAM,GAAGA,MAAM,CAAC7E,OAAP6E,CAAe,KAAfA,EAAsB,SAAtBA,CAAH,GAAsC,QAArDA;EACD;;EAED,OAAOpD,QAAQ,GAAGoD,MAAlB;AACD;;AAED,SAASmB,iBAAT,CAA2BjD,UAA3B,EAA+CC,OAA/C,EAA8D;EAC5D,IAAIiD,WAAW,gBAAG5H,KAAK,CAACsB,UAANtB,CAChB,CAACsE,KAAD,EAAQ9C,GAAR,KAAe;IACb,oBACExB,KAAC,cAADA,CAACuE,QAADvE,eACMsE,KADN;MAEE9C,GAAG,EAAEA,GAFP;MAGEkD,UAAU,EAAEA,UAHd;MAIEC,OAAO,EAAEA;IAJX,GADF;EAFc,EAAlB;;EAYA,IAAaxD,qCAAb,EAAa;IACXyG,WAAW,CAACxG,WAAZwG,GAA0B,cAA1BA;EACD;;EACD,OAAOA,WAAP;AACD;;AAED,IAAIC,SAAS,GAAG,CAAhB;AAQA;;;AAGG;;SACaC,aAAU;EAAA;;EACxB,IAAIhB,MAAM,GAAG9G,KAAK,CAACsD,UAANtD,CAAiB+G,wBAAjB/G,CAAb;EACA,CAAU8G,MAAV,oDAAS,CAAT,KAAS,EAAT,6CAAS,CAATE,YAAS,CAAT,KAAS,CAAT;EAEA,IAAIS,KAAK,GAAGzH,KAAK,CAACsD,UAANtD,CAAiBsH,mBAAjBtH,CAAZ;EACA,CAAUyH,KAAV,oDAAS,CAAT,KAAS,EAAT,+CAAS,CAATT,YAAS,CAAT,KAAS,CAAT;EAEA,IAAIrC,OAAO,GAAG8C,uBAAK,CAACF,OAANE,CAAcA,KAAK,CAACF,OAANE,CAAcM,MAAdN,GAAuB,CAArCA,MAAH,IAAGA,GAAH,MAAGA,iBAAyCA,MAAzC,CAA+CO,EAA7D;EACA,EACErD,OAAO,IAAI,IADb,qDAAS,CAAT,KAAS,EAAT,oEAAS,CAAT,YAAS,CAAT,KAAS,CAAT;EAKA,IAAI,CAACD,UAAD,IAAe1E,KAAK,CAACQ,QAANR,CAAe,MAAMiI,MAAM,CAAC,EAAEJ,SAAH,CAA3B7H,CAAnB;EACA,IAAI,CAACqE,IAAD,IAASrE,KAAK,CAACQ,QAANR,CAAe,MAAK;IAC/B,CAAU2E,OAAV,oDAAS,CAAT,KAAS,EAAT,yCAAS,CAATqC,YAAS,CAAT,KAAS,CAAT;IACA,OAAOW,iBAAiB,CAACjD,UAAD,EAAaC,OAAb,CAAxB;EAFW,EAAb;EAIA,IAAI,CAACuD,IAAD,IAASlI,KAAK,CAACQ,QAANR,CAAe,MAAOgC,IAAD,IAAiB;IACjD,CAAU8E,MAAV,oDAAS,QAAS,wCAAT,CAAT,YAAS,CAAT,KAAS,CAAT;IACA,CAAUnC,OAAV,oDAAS,QAAU,yCAAV,CAAT,YAAS,CAAT,KAAS,CAAT;IACAmC,MAAM,CAACM,KAAPN,CAAapC,UAAboC,EAAyBnC,OAAzBmC,EAAkC9E,IAAlC8E;EAHW,EAAb;EAKA,IAAIjC,MAAM,GAAGC,aAAa,CAACJ,UAAD,EAAaC,OAAb,CAA1B;EAEA,IAAIwD,OAAO,GAAGrB,MAAM,CAACsB,UAAPtB,CAAyBpC,UAAzBoC,CAAd;EAEA,IAAIuB,qBAAqB,GAAGrI,KAAK,CAAC4D,OAAN5D,CAC1B;IACEqE,IADF;IAEEQ,MAFF;IAGEqD;EAHF,GAIKC,OAJL,CAD0BnI,EAO1B,CAACmI,OAAD,EAAU9D,IAAV,EAAgBQ,MAAhB,EAAwBqD,IAAxB,CAP0BlI,CAA5B;EAUAA,KAAK,CAACsI,SAANtI,CAAgB,MAAK;IACnB;IACA;IACA;IACA,OAAO,MAAK;MACV,IAAI,CAAC8G,MAAL,EAAa;QACXyB,OAAO,CAACC,IAARD;QACA;MACD;;MACDzB,MAAM,CAAC2B,aAAP3B,CAAqBpC,UAArBoC;IALF;EAJF,GAWG,CAACA,MAAD,EAASpC,UAAT,CAXH1E;EAaA,OAAOqI,qBAAP;AACD;AAED;;;AAGG;;;SACaK,cAAW;EACzB,IAAIpI,KAAK,GAAGN,KAAK,CAACsD,UAANtD,CAAiBuD,6BAAjBvD,CAAZ;EACA,CAAUM,KAAV,oDAAS,CAAT,KAAS,EAAT,8CAAS,CAAT0G,YAAS,CAAT,KAAS,CAAT;EACA,OAAO,CAAC,GAAG1G,KAAK,CAACqI,QAANrI,CAAesI,MAAftI,EAAJ,CAAP;AACD;;AAED,MAAMuI,8BAA8B,GAAG,+BAAvC;AACA,IAAIC,oBAAoB,GAA2B,EAAnD;AAEA;;AAEG;;AACH,SAASnD,oBAAT,CAMMoD,MANN,EAMM;EAAA,IANwB;IAC5BtD,MAD4B;IAE5BC;EAF4B,IAMxBqD,oBAAF,EAAE;EACJ,IAAIhK,QAAQ,GAAGiH,WAAW,EAA1B;EACA,IAAIc,MAAM,GAAG9G,KAAK,CAACsD,UAANtD,CAAiB+G,wBAAjB/G,CAAb;EACA,IAAIM,KAAK,GAAGN,KAAK,CAACsD,UAANtD,CAAiBuD,6BAAjBvD,CAAZ;EAEA,EACE8G,MAAM,IAAI,IAAVA,IAAkBxG,KAAK,IAAI,IAD7B,qDAAS,CAEP,KAFO,EAEP,uDAFO,CAAT0G,YAAS,CAAT,KAAS,CAAT;EAIA,IAAI;IAAEgC,qBAAF;IAAyBC;EAAzB,IAAiD3I,KAArD,CATI;;EAYJN,KAAK,CAACsI,SAANtI,CAAgB,MAAK;IACnBlB,MAAM,CAACuB,OAAPvB,CAAeoK,iBAAfpK,GAAmC,QAAnCA;IACA,OAAO,MAAK;MACVA,MAAM,CAACuB,OAAPvB,CAAeoK,iBAAfpK,GAAmC,MAAnCA;IADF;EAFF,GAKG,EALHkB,EAZI;;EAoBJmJ,eAAe,CACbnJ,KAAK,CAACiG,WAANjG,CAAkB,MAAK;IACrB,IAAI,MAAK,QAALM,iBAAK,CAAEmD,UAAPnD,CAAkBA,KAAlB,MAA4B,MAAhC,EAAwC;MACtC,IAAItD,GAAG,GACL,CAACyI,MAAM,GAAGA,MAAM,CAACnF,KAAK,CAACvB,QAAP,EAAiBuB,KAAK,CAACiH,OAAvB,CAAT,GAA2C,IAAlD,KACAjH,KAAK,CAACvB,QAANuB,CAAetD,GAFjB;MAGA8L,oBAAoB,CAAC9L,GAAD,CAApB8L,GAA4BhK,MAAM,CAACsK,OAAnCN;IACD;;IACDO,cAAc,CAACC,OAAfD,CACE3D,UAAU,IAAImD,8BADhBQ,EAEEE,IAAI,CAACC,SAALD,CAAeT,oBAAfS,CAFFF;IAIAvK,MAAM,CAACuB,OAAPvB,CAAeoK,iBAAfpK,GAAmC,MAAnCA;EAXF,GAYG,CACD4G,UADC,EAEDD,MAFC,EAGDnF,KAAK,CAACmD,UAANnD,CAAiBA,KAHhB,EAIDA,KAAK,CAACvB,QAJL,EAKDuB,KAAK,CAACiH,OALL,CAZHvH,CADa,CAAfmJ,CApBI;;EA2CJnJ,KAAK,CAACS,eAANT,CAAsB,MAAK;IACzB,IAAI;MACF,IAAIyJ,gBAAgB,GAAGJ,cAAc,CAACK,OAAfL,CACrB3D,UAAU,IAAImD,8BADOQ,CAAvB;;MAGA,IAAII,gBAAJ,EAAsB;QACpBX,oBAAoB,GAAGS,IAAI,CAACI,KAALJ,CAAWE,gBAAXF,CAAvBT;MACD;IANH,EAOE,OAAOc,CAAP,EAAU;IAEX;EAVH,GAWG,CAAClE,UAAD,CAXH1F,EA3CI;;EAyDJA,KAAK,CAACS,eAANT,CAAsB,MAAK;IACzB,IAAI6J,wBAAwB,GAAG/C,MAAH,IAAGA,sBAAM,CAAEgD,uBAARhD,CAC7BgC,oBAD6BhC,EAE7B,MAAMhI,MAAM,CAACsK,OAFgBtC,EAG7BrB,MAH6BqB,CAA/B;IAKA,OAAO,MAAM+C,wBAAwB,IAAIA,wBAAwB,EAAjE;EANF,GAOG,CAAC/C,MAAD,EAASrB,MAAT,CAPHzF,EAzDI;;EAmEJA,KAAK,CAACS,eAANT,CAAsB,MAAK;IACzB;IACA,IAAIgJ,qBAAqB,KAAK,KAA9B,EAAqC;MACnC;IAHuB;;;IAOzB,IAAI,OAAOA,qBAAP,KAAiC,QAArC,EAA+C;MAC7ClK,MAAM,CAACiL,QAAPjL,CAAgB,CAAhBA,EAAmBkK,qBAAnBlK;MACA;IATuB;;;IAazB,IAAIC,QAAQ,CAACiL,IAAb,EAAmB;MACjB,IAAIC,EAAE,GAAGhD,QAAQ,CAACiD,cAATjD,CAAwBlI,QAAQ,CAACiL,IAATjL,CAAcyI,KAAdzI,CAAoB,CAApBA,CAAxBkI,CAAT;;MACA,IAAIgD,EAAJ,EAAQ;QACNA,EAAE,CAACE,cAAHF;QACA;MACD;IAlBsB;;;IAsBzB,IAAIhB,mBAAmB,KAAK,KAA5B,EAAmC;MACjC;IAvBuB;;;IA2BzBnK,MAAM,CAACiL,QAAPjL,CAAgB,CAAhBA,EAAmB,CAAnBA;EA3BF,GA4BG,CAACC,QAAD,EAAWiK,qBAAX,EAAkCC,mBAAlC,CA5BHjJ;AA6BD;;AAED,SAASmJ,eAAT,CAAyBiB,QAAzB,EAA4C;EAC1CpK,KAAK,CAACsI,SAANtI,CAAgB,MAAK;IACnBlB,MAAM,CAACuL,gBAAPvL,CAAwB,cAAxBA,EAAwCsL,QAAxCtL;IACA,OAAO,MAAK;MACVA,MAAM,CAACwL,mBAAPxL,CAA2B,cAA3BA,EAA2CsL,QAA3CtL;IADF;EAFF,GAKG,CAACsL,QAAD,CALHpK;AAMD,C,CAAA;AAID;AACA;AACA;;;AAEA,SAASuK,OAAT,CAAiBC,IAAjB,EAAgCC,OAAhC,EAA+C;EAC7C,IAAI,CAACD,IAAL,EAAW;IACT;IACA,IAAI,OAAOjC,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,CAACC,IAARD,CAAakC,OAAblC;;IAEpC,IAAI;MACF;MACA;MACA;MACA;MACA;MACA,MAAM,IAAI7J,KAAJ,CAAU+L,OAAV,CAAN,CANE;IAAJ,EAQE,OAAOb,CAAP,EAAU,CAAE;EACf;AACF,C,CAAA","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","has","getAll","forEach","append","getFormSubmissionInfo","defaultAction","options","method","action","encType","formData","submissionTrigger","getAttribute","FormData","name","type","form","Error","set","protocol","host","window","location","url","URL","_ref","children","fallbackElement","hydrationData","routes","useRenderDataRouter","createRouter","createBrowserRouter","_ref2","createHashRouter","BrowserRouter","_ref3","basename","historyRef","React","useRef","current","createBrowserHistory","v5Compat","history","state","setState","useState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref4","createHashHistory","HistoryRouter","_ref5","process","displayName","Link","forwardRef","LinkWithRef","ref","onClick","reloadDocument","replace","to","resetScroll","_ref6","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_ref7","path","useResolvedPath","match","useMatch","pathname","routerState","useContext","UNSAFE_DataRouterStateContext","nextLocation","navigation","nextPath","nextMatch","useMemo","matchPath","isPending","isActive","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","_ref8","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","_ref9","getKey","storageKey","useScrollRestoration","_temp","replaceProp","navigate","useNavigate","useLocation","useCallback","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","getSearchParamsForLocation","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","router","UNSAFE_DataRouterContext","invariant","document","opts","formEncType","fetch","routeContext","UNSAFE_RouteContext","matches","slice","route","index","createFetcherForm","FetcherForm","fetcherId","useFetcher","length","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp2","restoreScrollPosition","resetScrollPosition","scrollRestoration","useBeforeUnload","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","scrollTo","hash","el","getElementById","scrollIntoView","callback","addEventListener","removeEventListener","warning","cond","message"],"sources":["C:\\xampp\\htdocs\\jobhooks\\node_modules\\react-router-dom\\dom.ts","C:\\xampp\\htdocs\\jobhooks\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>\n    if (target.name) {\n      formData.set(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { NavigateOptions, To } from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useRenderDataRouter,\n  useResolvedPath,\n  UNSAFE_RouteContext,\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  RouteObject,\n} from \"@remix-run/router\";\nimport {\n  createBrowserHistory,\n  createHashHistory,\n  createBrowserRouter,\n  createHashRouter,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type { ParamKeyValuePair, URLSearchParamsInit };\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  DataMemoryRouterProps,\n  DataRouteMatch,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  DataMemoryRouter,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  useRenderDataRouter,\n} from \"react-router\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface DataBrowserRouterProps {\n  children?: React.ReactNode;\n  hydrationData?: HydrationState;\n  fallbackElement?: React.ReactNode;\n  routes?: RouteObject[];\n  window?: Window;\n}\n\nexport function DataBrowserRouter({\n  children,\n  fallbackElement,\n  hydrationData,\n  routes,\n  window,\n}: DataBrowserRouterProps): React.ReactElement {\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: (routes) =>\n      createBrowserRouter({\n        routes,\n        hydrationData,\n        window,\n      }),\n  });\n}\n\nexport interface DataHashRouterProps {\n  children?: React.ReactNode;\n  hydrationData?: HydrationState;\n  fallbackElement?: React.ReactNode;\n  routes?: RouteObject[];\n  window?: Window;\n}\n\nexport function DataHashRouter({\n  children,\n  hydrationData,\n  fallbackElement,\n  routes,\n  window,\n}: DataBrowserRouterProps): React.ReactElement {\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: (routes) =>\n      createHashRouter({\n        routes,\n        hydrationData,\n        window,\n      }),\n  });\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  resetScroll?: boolean;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      resetScroll,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      resetScroll,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      replace,\n      method = defaultMethod,\n      action = \".\",\n      onSubmit,\n      fetcherKey,\n      routeId,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action);\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    resetScroll,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    resetScroll?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explcitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, resetScroll });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to, resetScroll]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target:\n      | HTMLFormElement\n      | HTMLButtonElement\n      | HTMLInputElement\n      | FormData\n      | URLSearchParams\n      | { [name: string]: string }\n      | null,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      invariant(\n        router != null,\n        \"useSubmit() must be used within a <DataRouter>\"\n      );\n\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(action = \".\"): string {\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let { pathname, search } = useResolvedPath(action);\n\n  if (action === \".\" && match.route.index) {\n    search = search ? search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return pathname + search;\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\ntype FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: ReturnType<typeof useSubmitImpl>;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  invariant(router, `useFetcher must be used within a DataRouter`);\n\n  let route = React.useContext(UNSAFE_RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouter`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a DataRouter, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouter\"\n  );\n  let { restoreScrollPosition, resetScrollPosition } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (state?.navigation.state === \"idle\") {\n        let key =\n          (getKey ? getKey(state.location, state.matches) : null) ||\n          state.location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [\n      storageKey,\n      getKey,\n      state.navigation.state,\n      state.location,\n      state.matches,\n    ])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (resetScrollPosition === false) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, resetScrollPosition]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}