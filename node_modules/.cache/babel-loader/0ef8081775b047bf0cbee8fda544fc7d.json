{"ast":null,"code":"/**\n * React Router v6.4.0-pre.8\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, resolveTo, getToPathname, joinPaths, matchPath, warning, parsePath, matchRoutes, isRouteErrorResponse, createMemoryHistory, Action, stripBasename, createMemoryRouter } from '@remix-run/router';\nexport { Action as NavigationType, createPath, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? // @ts-expect-error\n(module => module.useSyncExternalStore)(React) : shim; // Contexts for data routers\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\n\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to);\n  let joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to); // Only append a trailing slash to the raw basename if the basename doesn't\n    // already have one and this wasn't specifically a route to \"\".  This\n    // allows folks to control the trailing slash behavior when using a basename\n\n    let appendSlash = !basename.endsWith(\"/\") && to !== \"\" && (to == null ? void 0 : to.pathname) !== \"\" && toPathname != null && toPathname.endsWith(\"/\");\n\n    if (pathname !== \"/\") {\n      joinedPathname = joinPaths([basename, pathname]);\n    } else if (appendSlash) {\n      joinedPathname = basename + \"/\";\n    } else {\n      joinedPathname = basename;\n    }\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\n\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\n\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || !match.route.index && match.pathnameBase !== matches[index - 1].pathnameBase);\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      // If this was a blank path, just use the basename directly, this gives\n      // the user control over trailing slash behavior\n      let toPath = typeof to === \"string\" ? parsePath(to) : to;\n      let isBlankPath = toPath.pathname == null || toPath.pathname === \"\";\n      path.pathname = isBlankPath ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\n\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\n\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\n\n\nfunction useResolvedPath(to) {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined);\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : (error == null ? void 0 : error.message) || JSON.stringify(error);\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unhandled Thrown Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), error != null && error.stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, error == null ? void 0 : error.stack) : null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n    style: codeStyles\n  }, \"<Route>\")));\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    }) : this.props.children;\n  }\n\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n\n    let getChildren = () => /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      children: error ? errorElement : match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet,\n        matches: parentMatches.concat(renderedMatches.slice(0, index + 1))\n      }\n    }); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren()\n    }) : getChildren();\n  }, null);\n}\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, hookName + \" must be used within a DataRouter\") : invariant(false) : void 0;\n  return state;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\n\nfunction useRevalidator() {\n  let router = React.useContext(DataRouterContext);\n  !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRevalidator must be used within a DataRouter\") : invariant(false) : void 0;\n  let state = useDataRouterState(DataRouterHook.UseRevalidator);\n  return {\n    revalidate: router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterHook.UseLoaderData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData must be used inside a RouteContext\") : invariant(false) : void 0;\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useLoaderData can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return state.loaderData[thisRoute.route.id];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1]; // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  }\n\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError must be used inside a RouteContext\") : invariant(false) : void 0;\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useRouteError can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0; // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[thisRoute.route.id];\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n} // to avoid issues w.r.t. dual initialization fetches in concurrent rendering.\n// Data router apps are expected to have a static route tree and are not intended\n// to be unmounted/remounted at runtime.\n\n\nlet routerSingleton;\n/**\n * @private\n */\n\nfunction useRenderDataRouter(_ref) {\n  let {\n    children,\n    fallbackElement,\n    routes,\n    createRouter\n  } = _ref;\n\n  if (!routerSingleton) {\n    routerSingleton = createRouter(routes || createRoutesFromChildren(children)).initialize();\n  }\n\n  let router = routerSingleton; // Sync router state to our component state to force re-renders\n\n  let state = useSyncExternalStore(router.subscribe, () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        resetScroll: opts == null ? void 0 : opts.resetScroll\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        resetScroll: opts == null ? void 0 : opts.resetScroll\n      })\n    };\n  }, [router]);\n\n  if (!state.initialized) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, fallbackElement);\n  }\n\n  return /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: router\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: routes,\n    children: children\n  }))));\n}\n\nfunction DataMemoryRouter(_ref2) {\n  let {\n    children,\n    initialEntries,\n    initialIndex,\n    hydrationData,\n    fallbackElement,\n    routes\n  } = _ref2;\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: routes => createMemoryRouter({\n      initialEntries,\n      initialIndex,\n      routes,\n      hydrationData\n    })\n  });\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\n\n\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\n\n\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, {\n      replace,\n      state\n    });\n  });\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\n\n\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\n\n\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * @private\n * Used as an extension to <Routes> and accepts a manual `routes` array to be\n * instead of using JSX children.  Extracted to it's own component to avoid\n * conditional usage of `useRoutes` if we have to render a `fallbackElement`\n */\n\n\nfunction DataRoutes(_ref7) {\n  let {\n    children,\n    location,\n    routes\n  } = _ref7;\n  return useRoutes(routes || createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nexport { DataMemoryRouter, MemoryRouter, Navigate, Outlet, Route, Router, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, renderMatches, useActionData, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useRenderDataRouter, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"mappings":"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","names":["isPolyfill","x","y","is","Object","useState","useEffect","useLayoutEffect","useDebugValue","React","didWarnOld18Alpha","didWarnUncachedGetSnapshot","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","process","console","error","value","cachedValue","inst","forceUpdate","checkIfSnapshotChanged","handleStoreChange","latestGetSnapshot","prevValue","nextValue","canUseDOM","window","document","createElement","isServerEnvironment","shim","server","client","module","DataRouterContext","createContext","displayName","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","matches","RouteErrorContext","useHref","to","useInRouterContext","invariant","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","toPathname","getToPathname","appendSlash","endsWith","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","getPathContributingMatches","filter","match","index","route","pathnameBase","useNavigate","locationPathname","routePathnamesJson","JSON","stringify","map","activeRef","useRef","current","navigate","useCallback","options","go","path","resolveTo","parse","toPath","parsePath","isBlankPath","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","length","params","useRoutes","routes","locationArg","dataRouterStateContext","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","parentPath","warningOnce","locationFromContext","parsedLocationArg","startsWith","remainingPathname","slice","matchRoutes","element","undefined","_renderMatches","assign","DefaultErrorElement","useRouteError","message","isRouteErrorResponse","status","statusText","lightgrey","preStyles","padding","backgroundColor","codeStyles","style","fontStyle","stack","RenderErrorBoundary","Component","constructor","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","children","component","dataRouterState","errors","renderedMatches","errorIndex","findIndex","m","id","Math","min","reduceRight","errorElement","getChildren","concat","DataRouterHook","useDataRouterState","hookName","useNavigation","UseNavigation","navigation","useRevalidator","router","UseRevalidator","revalidate","revalidation","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","thisRoute","useRouteLoaderData","routeId","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","alreadyWarned","key","cond","routerSingleton","useRenderDataRouter","_ref","fallbackElement","createRouter","createRoutesFromChildren","initialize","useSyncExternalStoreShim","n","opts","resetScroll","initialized","Router","historyAction","DataRoutes","DataMemoryRouter","_ref2","initialEntries","initialIndex","hydrationData","createMemoryRouter","MemoryRouter","_ref3","historyRef","createMemoryHistory","v5Compat","history","setState","action","listen","Navigate","_ref4","static","Outlet","Route","_props","_ref5","basenameProp","locationProp","NavigationType","Pop","staticProp","navigationContext","trailingPathname","stripBasename","Routes","_ref6","_ref7","Children","forEach","isValidElement","type","Fragment","apply","name","treePath","join","caseSensitive","loader","shouldRevalidate","renderMatches"],"sources":["C:\\xampp\\htdocs\\job_hooks\\node_modules\\react-router\\lib\\use-sync-external-store-shim\\useSyncExternalStoreShimClient.ts","C:\\xampp\\htdocs\\job_hooks\\node_modules\\react-router\\lib\\use-sync-external-store-shim\\useSyncExternalStoreShimServer.ts","C:\\xampp\\htdocs\\job_hooks\\node_modules\\react-router\\lib\\use-sync-external-store-shim\\index.ts","C:\\xampp\\htdocs\\job_hooks\\node_modules\\react-router\\lib\\context.ts","C:\\xampp\\htdocs\\job_hooks\\node_modules\\react-router\\lib\\hooks.tsx","C:\\xampp\\htdocs\\job_hooks\\node_modules\\react-router\\lib\\components.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? // @ts-expect-error\n      ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  History,\n  Location,\n  RouteMatch,\n  Router,\n  To,\n} from \"@remix-run/router\";\nimport { Action as NavigationType } from \"@remix-run/router\";\n\n// Contexts for data routers\nexport const DataRouterContext = React.createContext<Router | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  resetScroll?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport {\n  isRouteErrorResponse,\n  Location,\n  normalizePathname,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n  Router as DataRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n} from \"@remix-run/router\";\n\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  NavigateOptions,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-href\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n\n    // Only append a trailing slash to the raw basename if the basename doesn't\n    // already have one and this wasn't specifically a route to \"\".  This\n    // allows folks to control the trailing slash behavior when using a basename\n    let appendSlash =\n      !basename.endsWith(\"/\") &&\n      to !== \"\" &&\n      (to as Path)?.pathname !== \"\" &&\n      toPathname != null &&\n      toPathname.endsWith(\"/\");\n\n    if (pathname !== \"/\") {\n      joinedPathname = joinPaths([basename, pathname]);\n    } else if (appendSlash) {\n      joinedPathname = basename + \"/\";\n    } else {\n      joinedPathname = basename;\n    }\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches: RouteMatch[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 ||\n      (!match.route.index &&\n        match.pathnameBase !== matches[index - 1].pathnameBase)\n  );\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        // If this was a blank path, just use the basename directly, this gives\n        // the user control over trailing slash behavior\n        let toPath = typeof to === \"string\" ? parsePath(to) : to;\n        let isBlankPath = toPath.pathname == null || toPath.pathname === \"\";\n        path.pathname = isBlankPath\n          ? basename\n          : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error?.message || JSON.stringify(error);\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {error?.stack ? <pre style={preStyles}>{error?.stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: DataRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RouteContext.Provider\n        children={\n          error\n            ? errorElement\n            : match.route.element !== undefined\n            ? match.route.element\n            : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      />\n    );\n\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction useDataRouterState(hookName: DataRouterHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `${hookName} must be used within a DataRouter`);\n  return state;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let router = React.useContext(DataRouterContext);\n  invariant(router, `useRevalidator must be used within a DataRouter`);\n  let state = useDataRouterState(DataRouterHook.UseRevalidator);\n  return { revalidate: router.revalidate, state: state.revalidation };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(DataRouterHook.UseMatches);\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id],\n          handle: match.route.handle,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData() {\n  let state = useDataRouterState(DataRouterHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `useLoaderData can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData[thisRoute.route.id];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): any | undefined {\n  let state = useDataRouterState(DataRouterHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData() {\n  let state = useDataRouterState(DataRouterHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError() {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  HydrationState,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  RouteMatch,\n  RouteObject,\n  Router as DataRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  createMemoryRouter,\n  invariant,\n  normalizePathname,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport {\n  LocationContext,\n  NavigationContext,\n  Navigator,\n  DataRouterContext,\n  DataRouterStateContext,\n} from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\n// Module-scoped singleton to hold the router.  Extracted from the React lifecycle\n// to avoid issues w.r.t. dual initialization fetches in concurrent rendering.\n// Data router apps are expected to have a static route tree and are not intended\n// to be unmounted/remounted at runtime.\nlet routerSingleton: DataRouter;\n\n/**\n * Unit-testing-only function to reset the router between tests\n * @private\n */\nexport function _resetModuleScope() {\n  // @ts-expect-error\n  routerSingleton = null;\n}\n\n/**\n * @private\n */\nexport function useRenderDataRouter({\n  children,\n  fallbackElement,\n  routes,\n  createRouter,\n}: {\n  children?: React.ReactNode;\n  fallbackElement?: React.ReactNode;\n  routes?: RouteObject[];\n  createRouter: (routes: RouteObject[]) => DataRouter;\n}): React.ReactElement {\n  if (!routerSingleton) {\n    routerSingleton = createRouter(\n      routes || createRoutesFromChildren(children)\n    ).initialize();\n  }\n  let router = routerSingleton;\n\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, { state, resetScroll: opts?.resetScroll }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          resetScroll: opts?.resetScroll,\n        }),\n    };\n  }, [router]);\n\n  if (!state.initialized) {\n    return <>{fallbackElement}</>;\n  }\n\n  return (\n    <DataRouterContext.Provider value={router}>\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          location={state.location}\n          navigationType={state.historyAction}\n          navigator={navigator}\n        >\n          <DataRoutes routes={routes} children={children} />\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nexport interface DataMemoryRouterProps {\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  hydrationData?: HydrationState;\n  fallbackElement?: React.ReactNode;\n  routes?: RouteObject[];\n}\n\nexport function DataMemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  hydrationData,\n  fallbackElement,\n  routes,\n}: DataMemoryRouterProps): React.ReactElement {\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: (routes) =>\n      createMemoryRouter({\n        initialEntries,\n        initialIndex,\n        routes,\n        hydrationData,\n      }),\n  });\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/components/navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\ninterface DataRouteProps {\n  id?: RouteObject[\"id\"];\n  loader?: RouteObject[\"loader\"];\n  action?: RouteObject[\"action\"];\n  errorElement?: RouteObject[\"errorElement\"];\n  shouldRevalidate?: RouteObject[\"shouldRevalidate\"];\n  handle?: RouteObject[\"handle\"];\n}\n\nexport interface RouteProps extends DataRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps extends DataRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps extends DataRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps extends DataRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/components/route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/routers/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\ninterface DataRoutesProps extends RoutesProps {\n  routes?: RouteObject[];\n}\n\n/**\n * @private\n * Used as an extension to <Routes> and accepts a manual `routes` array to be\n * instead of using JSX children.  Extracted to it's own component to avoid\n * conditional usage of `useRoutes` if we have to render a `fallbackElement`\n */\nfunction DataRoutes({\n  children,\n  location,\n  routes,\n}: DataRoutesProps): React.ReactElement | null {\n  return useRoutes(routes || createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n"]},"metadata":{},"sourceType":"module"}