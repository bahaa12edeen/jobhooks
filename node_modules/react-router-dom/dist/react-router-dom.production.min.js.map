{"version":3,"file":"react-router-dom.production.min.js","sources":["../dom.ts","../index.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>\n    if (target.name) {\n      formData.set(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { NavigateOptions, To } from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useRenderDataRouter,\n  useResolvedPath,\n  UNSAFE_RouteContext,\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  RouteObject,\n} from \"@remix-run/router\";\nimport {\n  createBrowserHistory,\n  createHashHistory,\n  createBrowserRouter,\n  createHashRouter,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type { ParamKeyValuePair, URLSearchParamsInit };\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  DataMemoryRouterProps,\n  DataRouteMatch,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  DataMemoryRouter,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  useRenderDataRouter,\n} from \"react-router\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface DataBrowserRouterProps {\n  children?: React.ReactNode;\n  hydrationData?: HydrationState;\n  fallbackElement?: React.ReactNode;\n  routes?: RouteObject[];\n  window?: Window;\n}\n\nexport function DataBrowserRouter({\n  children,\n  fallbackElement,\n  hydrationData,\n  routes,\n  window,\n}: DataBrowserRouterProps): React.ReactElement {\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: (routes) =>\n      createBrowserRouter({\n        routes,\n        hydrationData,\n        window,\n      }),\n  });\n}\n\nexport interface DataHashRouterProps {\n  children?: React.ReactNode;\n  hydrationData?: HydrationState;\n  fallbackElement?: React.ReactNode;\n  routes?: RouteObject[];\n  window?: Window;\n}\n\nexport function DataHashRouter({\n  children,\n  hydrationData,\n  fallbackElement,\n  routes,\n  window,\n}: DataBrowserRouterProps): React.ReactElement {\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    routes,\n    createRouter: (routes) =>\n      createHashRouter({\n        routes,\n        hydrationData,\n        window,\n      }),\n  });\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  resetScroll?: boolean;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      resetScroll,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      resetScroll,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      replace,\n      method = defaultMethod,\n      action = \".\",\n      onSubmit,\n      fetcherKey,\n      routeId,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action);\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    resetScroll,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    resetScroll?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explcitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, resetScroll });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to, resetScroll]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target:\n      | HTMLFormElement\n      | HTMLButtonElement\n      | HTMLInputElement\n      | FormData\n      | URLSearchParams\n      | { [name: string]: string }\n      | null,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      invariant(\n        router != null,\n        \"useSubmit() must be used within a <DataRouter>\"\n      );\n\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(action = \".\"): string {\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let { pathname, search } = useResolvedPath(action);\n\n  if (action === \".\" && match.route.index) {\n    search = search ? search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return pathname + search;\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\ntype FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: ReturnType<typeof useSubmitImpl>;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  invariant(router, `useFetcher must be used within a DataRouter`);\n\n  let route = React.useContext(UNSAFE_RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouter`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a DataRouter, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let router = React.useContext(UNSAFE_DataRouterContext);\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouter\"\n  );\n  let { restoreScrollPosition, resetScrollPosition } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (state?.navigation.state === \"idle\") {\n        let key =\n          (getKey ? getKey(state.location, state.matches) : null) ||\n          state.location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [\n      storageKey,\n      getKey,\n      state.navigation.state,\n      state.location,\n      state.matches,\n    ])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (resetScrollPosition === false) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, resetScrollPosition]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"],"names":["defaultEncType","isHtmlElement","object","tagName","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getFormSubmissionInfo","target","defaultAction","options","method","action","encType","formData","toLowerCase","submissionTrigger","getAttribute","FormData","name","append","isButtonElement","isInputElement","type","form","Error","set","protocol","host","window","location","url","URL","DataBrowserRouter","children","fallbackElement","hydrationData","routes","useRenderDataRouter","createRouter","createBrowserRouter","DataHashRouter","createHashRouter","BrowserRouter","basename","historyRef","React","useRef","current","createBrowserHistory","v5Compat","history","state","setState","useState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","createHashHistory","HistoryRouter","Link","forwardRef","onClick","reloadDocument","replace","to","resetScroll","rest","ref","href","useHref","internalOnClick","useLinkClickHandler","createElement","assign","event","defaultPrevented","NavLink","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","path","useResolvedPath","match","useMatch","pathname","nextLocation","useContext","UNSAFE_DataRouterStateContext","navigation","nextPath","isPending","useMemo","matchPath","isActive","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","onSubmit","fetcherKey","routeId","forwardedRef","submit","useSubmitImpl","formMethod","formAction","useFormAction","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","getKey","storageKey","useLocation","router","UNSAFE_DataRouterContext","invariant","restoreScrollPosition","resetScrollPosition","useEffect","scrollRestoration","callback","useCallback","matches","savedScrollPositions","scrollY","sessionStorage","setItem","JSON","stringify","addEventListener","removeEventListener","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","hash","el","document","getElementById","slice","scrollIntoView","scrollTo","useScrollRestoration","replaceProp","navigate","useNavigate","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","searchParams","locationSearch","defaultSearchParams","has","getAll","forEach","getSearchParamsForLocation","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","opts","formEncType","fetch","routeContext","UNSAFE_RouteContext","route","index","fetcherId","useFetcher","length","id","String","createFetcherForm","load","fetcher","getFetcher","fetcherWithComponents","deleteFetcher","console","warn","useFetchers","fetchers","values"],"mappings":"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"}